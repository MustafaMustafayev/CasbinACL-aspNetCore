// <auto-generated />
using CasbinACLvsRBAC.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CasbinACLvsRBAC.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200624202519_ctx1")]
    partial class ctx1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CasbinACLvsRBAC.Entity.CasbinRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("V5")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CasbinRule");
                });
#pragma warning restore 612, 618
        }
    }
}
